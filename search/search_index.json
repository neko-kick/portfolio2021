{"config":{"indexing":"full","lang":["ja"],"min_search_length":100,"prebuild_index":false,"separator":"[\\s\\-\\.]+"},"docs":[{"location":"","text":"Welcome to MkDocs \u00b6 For full documentation visit mkdocs.org . Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. h2 \u00b6 h3 \u00b6 h4 \u00b6 h5 \u00b6 h6 \u00b6 CodeBlock \u00b6 1 import boto3 2 import jmespath 3 import logging 4 5 import os 6 7 from base64 import b64decode 8 9 logger = logging . getLogger() 10 logger . setLevel(logging . INFO) 11 12 # encrypt environmental variables 13 ENCRYPTED = os . environ[ 'PJ' ] 14 # Decrypt code should run once and variables stored outside of the function 15 # handler so that these are decrypted once per container 16 DECRYPTED = boto3 . client( 'kms' ) . decrypt( 17 CiphertextBlob = b64decode(ENCRYPTED), 18 EncryptionContext = { 19 'LambdaFunctionName' : os . environ[ 'AWS_LAMBDA_FUNCTION_NAME' ]} 20 )[ 'Plaintext' ] . decode( 'utf-8' ) 21 22 23 client = boto3 . client( 'logs' ) 24 25 # variables 26 pj_name = DECRYPTED 27 28 29 # return Class Type ... list 30 def describe_pj_log_group (prefix): 31 response = client . describe_log_groups(logGroupNamePrefix = prefix) 32 log_group_list = jmespath . search( 'logGroups[].logGroupName' , response) 33 return log_group_list 34 35 36 # handler 37 def lambda_handler (event, context): 38 39 log_metrics = \"/ {} \" . format(pj_name) 40 41 log_group_list = describe_pj_log_group(log_metrics) 42 43 # logging 44 logger . info( '##### Describe Log Groups #####' ) 45 logger . info( 'Log list : ' . join(log_group_list)) 46 47 # TODO implement 48 return { 49 'numLogGroups' : len (log_group_list), 50 'listLogGroups' : log_group_list 51 } \u30dc\u30bf\u30f3 Ctrl + Alt + Del \u30c6\u30fc\u30d6\u30eb \u00b6 \u5217 \u5217 \u5185\u5bb91 \u5185\u5bb91 \u5185\u5bb92 \u5185\u5bb92 \u30c0\u30a4\u30a2\u30b0\u30e9\u30e0 \u00b6 graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!]; graph TD; A-->B; B-->A; Note \u6ce8\u91c8\u3092\u3053\u3053\u306b\u8a18\u8f09\u3002 \u6ce8\u91c82 \u30cd\u30b9\u30c8\u3059\u308b\u969b\u306f\u3082\u3046\u4e00\u56de Tip \u30d2\u30f3\u30c8\u3067\u3059\u3002 Warning \u3053\u308c\u306f\u8b66\u544a\u3067\u3059 Danger \u3053\u308c\u306f\u5371\u967a\u3067\u3059\u3002 Success \u3053\u308c\u306f\u6210\u529f\u3067\u3059\u3002 Failure \u3053\u308c\u306f\u5931\u6557\u3067\u3059\u3002 1 FATAL Bug \u3053\u308c\u306f\u30d0\u30b0\u3067\u3059\u3002 Summary \u3053\u308c\u306f\u6982\u8981\u3067\u3059\u3002 ??? note(\u6298\u308a\u8fd4\u3057) \u6298\u308a\u8fd4\u3057 \u30d1\u30e9\u30e1\u30fc\u30bf\u89e3\u8aac\u3068\u304b \u00b6 \u4e0b\u8a18\u3092 mkdocs.yml \u306b\u8ffd\u52a0 1 markdown_extensions : 2 - def_list \u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b.\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u304b\u3092\u8a2d\u5b9a Lorem ipsum dolor sit amet Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Cras arcu libero Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor.","title":"Home"},{"location":"#Welcome-to-MkDocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#Commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#h2","text":"","title":"h2"},{"location":"#h3","text":"","title":"h3"},{"location":"#h4","text":"","title":"h4"},{"location":"#h5","text":"","title":"h5"},{"location":"#h6","text":"","title":"h6"},{"location":"#CodeBlock","text":"1 import boto3 2 import jmespath 3 import logging 4 5 import os 6 7 from base64 import b64decode 8 9 logger = logging . getLogger() 10 logger . setLevel(logging . INFO) 11 12 # encrypt environmental variables 13 ENCRYPTED = os . environ[ 'PJ' ] 14 # Decrypt code should run once and variables stored outside of the function 15 # handler so that these are decrypted once per container 16 DECRYPTED = boto3 . client( 'kms' ) . decrypt( 17 CiphertextBlob = b64decode(ENCRYPTED), 18 EncryptionContext = { 19 'LambdaFunctionName' : os . environ[ 'AWS_LAMBDA_FUNCTION_NAME' ]} 20 )[ 'Plaintext' ] . decode( 'utf-8' ) 21 22 23 client = boto3 . client( 'logs' ) 24 25 # variables 26 pj_name = DECRYPTED 27 28 29 # return Class Type ... list 30 def describe_pj_log_group (prefix): 31 response = client . describe_log_groups(logGroupNamePrefix = prefix) 32 log_group_list = jmespath . search( 'logGroups[].logGroupName' , response) 33 return log_group_list 34 35 36 # handler 37 def lambda_handler (event, context): 38 39 log_metrics = \"/ {} \" . format(pj_name) 40 41 log_group_list = describe_pj_log_group(log_metrics) 42 43 # logging 44 logger . info( '##### Describe Log Groups #####' ) 45 logger . info( 'Log list : ' . join(log_group_list)) 46 47 # TODO implement 48 return { 49 'numLogGroups' : len (log_group_list), 50 'listLogGroups' : log_group_list 51 } \u30dc\u30bf\u30f3 Ctrl + Alt + Del","title":"CodeBlock"},{"location":"#\u30c6\u30fc\u30d6\u30eb","text":"\u5217 \u5217 \u5185\u5bb91 \u5185\u5bb91 \u5185\u5bb92 \u5185\u5bb92","title":"\u30c6\u30fc\u30d6\u30eb"},{"location":"#\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0","text":"graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!]; graph TD; A-->B; B-->A; Note \u6ce8\u91c8\u3092\u3053\u3053\u306b\u8a18\u8f09\u3002 \u6ce8\u91c82 \u30cd\u30b9\u30c8\u3059\u308b\u969b\u306f\u3082\u3046\u4e00\u56de Tip \u30d2\u30f3\u30c8\u3067\u3059\u3002 Warning \u3053\u308c\u306f\u8b66\u544a\u3067\u3059 Danger \u3053\u308c\u306f\u5371\u967a\u3067\u3059\u3002 Success \u3053\u308c\u306f\u6210\u529f\u3067\u3059\u3002 Failure \u3053\u308c\u306f\u5931\u6557\u3067\u3059\u3002 1 FATAL Bug \u3053\u308c\u306f\u30d0\u30b0\u3067\u3059\u3002 Summary \u3053\u308c\u306f\u6982\u8981\u3067\u3059\u3002 ??? note(\u6298\u308a\u8fd4\u3057) \u6298\u308a\u8fd4\u3057","title":"\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0"},{"location":"#\u30d1\u30e9\u30e1\u30fc\u30bf\u89e3\u8aac\u3068\u304b","text":"\u4e0b\u8a18\u3092 mkdocs.yml \u306b\u8ffd\u52a0 1 markdown_extensions : 2 - def_list \u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b.\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u304b\u3092\u8a2d\u5b9a Lorem ipsum dolor sit amet Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Cras arcu libero Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor.","title":"\u30d1\u30e9\u30e1\u30fc\u30bf\u89e3\u8aac\u3068\u304b"},{"location":"about/","text":"About \u00b6 \u3053\u306e\u30b5\u30a4\u30c8\u306b\u3064\u3044\u3066 \u00b6","title":"About"},{"location":"about/#About","text":"","title":"About"},{"location":"about/#\u3053\u306e\u30b5\u30a4\u30c8\u306b\u3064\u3044\u3066","text":"","title":"\u3053\u306e\u30b5\u30a4\u30c8\u306b\u3064\u3044\u3066"},{"location":"cicd/cicd_models_container/","text":"CI/CD Container Model \u00b6 1. Architecture \u00b6 \u69cb\u6210\u306f\u4ee5\u4e0b\u306e\u901a\u308a. \u4e0a\u306e\u56f3\u3092\u89e3\u8aac\u3059\u308b\u3068 - \u30d6\u30e9\u30f3\u30c1\u306fmain\u3068dev\u306e2\u7a2e\u985e\u3042\u308a, main\u30d6\u30e9\u30f3\u30c1\u3092prd(\u672c\u756a)\u74b0\u5883\u76f8\u5f53\u306e\u30d6\u30e9\u30f3\u30c1\u3068\u3059\u308b. - Developer\u3068Reviwer\u306e2\u4eba\u304c\u5b58\u5728. Developer\u306ePullReq\u3092\u627f\u8a8d\u3059\u308b\u3053\u3068\u3067Merge. - CircleCI \u306b\u3088\u3063\u3066\u30b3\u30f3\u30c6\u30ca\u30d3\u30eb\u30c9. ECR\u3078Push\u3059\u308b\u5834\u5408, AWS\u306e\u4e00\u6642\u7684\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u8a8d\u8a3c\u60c5\u5831\u3092\u5229\u7528\u3057\u3066ECR\u3078Push. 2. IAM \u00b6 2.1. IAM User \u4f5c\u6210 \u00b6 IAM\u30e6\u30fc\u30b6\u30fc\u4f5c\u6210. cicd-circleci-001 \u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u3092\u4f5c\u6210. \u30a2\u30af\u30bb\u30b9\u30ad\u30fc \u3068 \u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30a2\u30af\u30bb\u30b9\u30ad\u30fc \u3092\u4fdd\u5b58. IAM\u30dd\u30ea\u30b7\u30fc cicd-policy-assumeRoleCircleCIRole-001 \u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f5c\u6210. 1 { 2 \"Version\" : \"2012-10-17\" , 3 \"Statement\" : [ 4 { 5 \"Effect\" : \"Allow\" , 6 \"Action\" : \"sts:AssumeRole\" , 7 \"Resource\" : \"arn:aws:iam::[account_id]:role/cicd-role-pushContainerImagesToECR-001\" 8 } 9 ] 10 } \u4f5c\u6210\u3057\u305f\u30dd\u30ea\u30b7\u30fc\u3092IAM\u30e6\u30fc\u30b6\u30fc cicd-circleci-01 \u306b\u30a2\u30bf\u30c3\u30c1. 2.2. IAM Role \u4f5c\u6210 \u00b6 IAM Role cicd-role-ecrPushImages-001 \u4f5c\u6210. \u4fe1\u983c\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092 \u30a2\u30ab\u30a6\u30f3\u30c8ID \u306b\u6307\u5b9a. 1 { 2 \"Version\" : \"2012-10-17\" , 3 \"Statement\" : [ 4 { 5 \"Effect\" : \"Allow\" , 6 \"Principal\" : { 7 \"AWS\" : \"arn:aws:iam::[account_id]:root\" 8 }, 9 \"Action\" : \"sts:AssumeRole\" , 10 \"Condition\" : {} 11 } 12 ] 13 } IAM Policy cicd-policy-ecrPushImages-001 \u3092\u4f5c\u6210. ECR\u306b\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8Push\u3059\u308b\u305f\u3081\u306e\u6a29\u9650\u3092\u4ed8\u4e0e. 1 { 2 \"Version\" : \"2012-10-17\" , 3 \"Statement\" : [ 4 { 5 \"Effect\" : \"Allow\" , 6 \"Action\" : [ 7 \"ecr:PutImageScanningConfiguration\" , 8 \"ecr:CompleteLayerUpload\" , 9 \"ecr:UploadLayerPart\" , 10 \"ecr:InitiateLayerUpload\" , 11 \"ecr:BatchCheckLayerAvailability\" , 12 \"ecr:PutImage\" 13 ], 14 \"Resource\" : \"arn:aws:ecr:[region]:[account_id]:repository/*\" 15 }, 16 { 17 \"Effect\" : \"Allow\" , 18 \"Action\" : [ 19 \"ecr:GetAuthorizationToken\" 20 ], 21 \"Resource\" : \"*\" 22 } 23 ] 24 } IAM Role cicd-role-ecrPushImages-001 \u306b IAM Policy cicd-policy-ecrPushImages-001 \u3092\u30a2\u30bf\u30c3\u30c1. 3. CircleCI \u00b6 \u30b3\u30f3\u30c6\u30ca\u30ea\u30bd\u30fc\u30b9\u3092\u7ba1\u7406\u3059\u308bGitHub\u30ea\u30dd\u30b8\u30c8\u30ea\u306b, .circleci/config.yml \u3092\u4f5c\u6210 1 version : 2.1 2 3 executors : 4 work_container : 5 docker : 6 - image : circleci/node:12.13.1 7 - image : circleci/python:3.8.4 8 9 # \u30aa\u30fc\u30d6\u306e\u8a2d\u5b9a 10 orbs : 11 aws-cli : circleci/aws-cli@1.4.0 12 13 commands : 14 set_credential : 15 description : \"\u4e00\u6642\u8a8d\u8a3c\u30bb\u30c3\u30b7\u30e7\u30f3\u53d6\u5f97\" 16 parameters : 17 duration_second : 18 description : \"\u30bb\u30c3\u30b7\u30e7\u30f3\u4fdd\u6301\u671f\u9593\" 19 type : integer 20 default : 3600 21 steps : 22 - run : 23 name : set-credential 24 # \u4e00\u6642\u8a8d\u8a3c\u30c8\u30fc\u30af\u30f3aws_sts_credentials\u3092\u751f\u6210\u3057\u3066, ECR\u3078\u30ed\u30b0\u30a4\u30f3.image Push 25 command : | 26 aws_sts_credentials=\"$(aws sts assume-role \\ 27 --role-arn ${AWS_ASSUME_ROLE_ARN} \\ 28 --role-session-name \"circleci-session\" \\ 29 --duration-seconds <<parameters.duration_second>> \\ 30 --query \"Credentials\" \\ 31 --output \"json\")\" 32 export AWS_ACCESS_KEY_ID=\"$(echo $aws_sts_credentials | jq -r '.Credentials.AccessKeyId')\" 33 export AWS_SECRET_ACCESS_KEY=\"$(echo $aws_sts_credentials | jq -r '.Credentials.SecretAccessKey')\" 34 export AWS_SESSION_TOKEN=\"$(echo $aws_sts_credentials | jq -r '.Credentials.SessionToken')\" 35 ecr_login : 36 description : \"ECR\u30ed\u30b0\u30a4\u30f3\" 37 steps : 38 - run : 39 name : ecr_login 40 # ECR \u30ed\u30b0\u30a4\u30f3 41 command : | 42 aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com 43 docker_push : 44 description : \"ecr\u30ec\u30b8\u30b9\u30c8\u30ea\u3078push\" 45 steps : 46 - run : 47 name : docker_push 48 # \u4e00\u6642\u8a8d\u8a3c\u30c8\u30fc\u30af\u30f3aws_sts_credentials\u3092\u751f\u6210\u3057\u3066, ECR\u3078\u30ed\u30b0\u30a4\u30f3, Push 49 command : | 50 docker build -t ${AWS_ECR_REGISTORY_NAME} . 51 docker tag ${AWS_ECR_REGISTORY_NAME}:latest ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${AWS_ECR_REGISTORY_NAME}:latest 52 docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${AWS_ECR_REGISTORY_NAME}:latest 53 54 # \u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u5b9f\u884c\u3059\u308b\u30b8\u30e7\u30d6\u306e\u5b9a\u7fa9 55 jobs : 56 build : 57 executor : work_container 58 steps : 59 - checkout 60 - setup_remote_docker : 61 version : 19.03.13 62 #docker_layer_caching: true 63 - run : 64 name : docker build 65 command : | 66 docker build -t ${AWS_ECR_REGISTORY_NAME} . 67 deploy : 68 executor : work_container 69 steps : 70 - checkout 71 - aws-cli/install 72 - setup_remote_docker : 73 version : 19.03.13 74 #docker_layer_caching: true 75 - set_credential 76 - ecr_login 77 - docker_push 78 79 # \u30b8\u30e7\u30d6\u306e\u5b9f\u884c\u9806\u306e\u6307\u5b9a 80 workflows : 81 version : 2 82 build-and-deploy : 83 jobs : 84 - build : 85 filters : 86 branches : 87 ignore : 88 - /feature-.*/ 89 - deploy : 90 requires : 91 - build 92 filters : 93 branches : 94 only : 95 - dev # deploy dev registory 96 - prd # deploy prd registory 97 - /hotfix-.*/ # deploy prd registory CircleCI\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u958b\u304d, All Pipelines > [repository_name] > Environment Variables \u3092\u958b\u304d, \u4ee5\u4e0b\u306e\u3088\u3046\u306b\u74b0\u5883\u5909\u6570\u3092\u5b9a\u7fa9. parameter name value description AWS_ACCESS_KEY_ID [\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u3092\u5165\u529b] IAM\u30e6\u30fc\u30b6\u30fccicd-circleci-001\u3067\u767a\u884c\u3057\u305f\u30a2\u30af\u30bb\u30b9\u30ad\u30fc AWS_DEFAULT_REGION ap-northeast-1 \u5229\u7528\u74b0\u5883\u3092\u5165\u529b AWS_SECRET_ACCESS_KEY [\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u3092\u5165\u529b] IAM\u30e6\u30fc\u30b6\u30fccicd-circleci-001\u3067\u767a\u884c\u3057\u305f\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30a2\u30af\u30bb\u30b9\u30ad\u30fc AWS_ACCOUNT_ID [AWS\u30a2\u30ab\u30a6\u30f3\u30c8ID\u3092\u5165\u529b] AWS\u30a2\u30ab\u30a6\u30f3\u30c8ID\u3092\u5165\u529b AWS_ASSUME_ROLE_ARN arn:aws:iam::[account_id]:role/cicd-role-ecrPushImages-001 \u6a29\u9650\u59d4\u4efb\u3059\u308bIAM\u30ed\u30fc\u30eb\u306eArn AWS_ECR_REGISTORY_NAME webapp-dev-ecr-djangoimage ECR\u30ec\u30b8\u30b9\u30c8\u30ea\u540d\u3092\u8a18\u8f09 AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_DEFAULT_REGION\u306fconfig.yml\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u304cAWSCLI\u7528\u306eOrb\u3092\u5229\u7528\u3059\u308b\u5834\u5408, \u5b9a\u7fa9\u3059\u308b. \u8a73\u3057\u304f\u306f, circleci/aws-cli@2.0.3 ECR\u7528\u306eOrb\u3082\u5b58\u5728\u3059\u308b\u304c, \u4e00\u6642\u8a8d\u8a3c\u7528\u306e\u30c8\u30fc\u30af\u30f3\u3092\u5229\u7528\u3057\u3066ECR\u3078Login\u3059\u308b\u3082\u306e\u3067\u306f\u306a\u3044\u305f\u3081, \u4eca\u56de\u306fconfig\u4e0a\u3067\u8868\u73fe\u3057\u305f","title":"Container Model"},{"location":"cicd/cicd_models_container/#CICD-Container-Model","text":"","title":"CI/CD Container Model"},{"location":"cicd/cicd_models_container/#1-Architecture","text":"\u69cb\u6210\u306f\u4ee5\u4e0b\u306e\u901a\u308a. \u4e0a\u306e\u56f3\u3092\u89e3\u8aac\u3059\u308b\u3068 - \u30d6\u30e9\u30f3\u30c1\u306fmain\u3068dev\u306e2\u7a2e\u985e\u3042\u308a, main\u30d6\u30e9\u30f3\u30c1\u3092prd(\u672c\u756a)\u74b0\u5883\u76f8\u5f53\u306e\u30d6\u30e9\u30f3\u30c1\u3068\u3059\u308b. - Developer\u3068Reviwer\u306e2\u4eba\u304c\u5b58\u5728. Developer\u306ePullReq\u3092\u627f\u8a8d\u3059\u308b\u3053\u3068\u3067Merge. - CircleCI \u306b\u3088\u3063\u3066\u30b3\u30f3\u30c6\u30ca\u30d3\u30eb\u30c9. ECR\u3078Push\u3059\u308b\u5834\u5408, AWS\u306e\u4e00\u6642\u7684\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u8a8d\u8a3c\u60c5\u5831\u3092\u5229\u7528\u3057\u3066ECR\u3078Push.","title":"1. Architecture"},{"location":"cicd/cicd_models_container/#2-IAM","text":"","title":"2. IAM"},{"location":"cicd/cicd_models_container/#21-IAM-User-\u4f5c\u6210","text":"IAM\u30e6\u30fc\u30b6\u30fc\u4f5c\u6210. cicd-circleci-001 \u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u3092\u4f5c\u6210. \u30a2\u30af\u30bb\u30b9\u30ad\u30fc \u3068 \u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30a2\u30af\u30bb\u30b9\u30ad\u30fc \u3092\u4fdd\u5b58. IAM\u30dd\u30ea\u30b7\u30fc cicd-policy-assumeRoleCircleCIRole-001 \u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f5c\u6210. 1 { 2 \"Version\" : \"2012-10-17\" , 3 \"Statement\" : [ 4 { 5 \"Effect\" : \"Allow\" , 6 \"Action\" : \"sts:AssumeRole\" , 7 \"Resource\" : \"arn:aws:iam::[account_id]:role/cicd-role-pushContainerImagesToECR-001\" 8 } 9 ] 10 } \u4f5c\u6210\u3057\u305f\u30dd\u30ea\u30b7\u30fc\u3092IAM\u30e6\u30fc\u30b6\u30fc cicd-circleci-01 \u306b\u30a2\u30bf\u30c3\u30c1.","title":"2.1. IAM User \u4f5c\u6210"},{"location":"cicd/cicd_models_container/#22-IAM-Role-\u4f5c\u6210","text":"IAM Role cicd-role-ecrPushImages-001 \u4f5c\u6210. \u4fe1\u983c\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092 \u30a2\u30ab\u30a6\u30f3\u30c8ID \u306b\u6307\u5b9a. 1 { 2 \"Version\" : \"2012-10-17\" , 3 \"Statement\" : [ 4 { 5 \"Effect\" : \"Allow\" , 6 \"Principal\" : { 7 \"AWS\" : \"arn:aws:iam::[account_id]:root\" 8 }, 9 \"Action\" : \"sts:AssumeRole\" , 10 \"Condition\" : {} 11 } 12 ] 13 } IAM Policy cicd-policy-ecrPushImages-001 \u3092\u4f5c\u6210. ECR\u306b\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8Push\u3059\u308b\u305f\u3081\u306e\u6a29\u9650\u3092\u4ed8\u4e0e. 1 { 2 \"Version\" : \"2012-10-17\" , 3 \"Statement\" : [ 4 { 5 \"Effect\" : \"Allow\" , 6 \"Action\" : [ 7 \"ecr:PutImageScanningConfiguration\" , 8 \"ecr:CompleteLayerUpload\" , 9 \"ecr:UploadLayerPart\" , 10 \"ecr:InitiateLayerUpload\" , 11 \"ecr:BatchCheckLayerAvailability\" , 12 \"ecr:PutImage\" 13 ], 14 \"Resource\" : \"arn:aws:ecr:[region]:[account_id]:repository/*\" 15 }, 16 { 17 \"Effect\" : \"Allow\" , 18 \"Action\" : [ 19 \"ecr:GetAuthorizationToken\" 20 ], 21 \"Resource\" : \"*\" 22 } 23 ] 24 } IAM Role cicd-role-ecrPushImages-001 \u306b IAM Policy cicd-policy-ecrPushImages-001 \u3092\u30a2\u30bf\u30c3\u30c1.","title":"2.2. IAM Role \u4f5c\u6210"},{"location":"cicd/cicd_models_container/#3-CircleCI","text":"\u30b3\u30f3\u30c6\u30ca\u30ea\u30bd\u30fc\u30b9\u3092\u7ba1\u7406\u3059\u308bGitHub\u30ea\u30dd\u30b8\u30c8\u30ea\u306b, .circleci/config.yml \u3092\u4f5c\u6210 1 version : 2.1 2 3 executors : 4 work_container : 5 docker : 6 - image : circleci/node:12.13.1 7 - image : circleci/python:3.8.4 8 9 # \u30aa\u30fc\u30d6\u306e\u8a2d\u5b9a 10 orbs : 11 aws-cli : circleci/aws-cli@1.4.0 12 13 commands : 14 set_credential : 15 description : \"\u4e00\u6642\u8a8d\u8a3c\u30bb\u30c3\u30b7\u30e7\u30f3\u53d6\u5f97\" 16 parameters : 17 duration_second : 18 description : \"\u30bb\u30c3\u30b7\u30e7\u30f3\u4fdd\u6301\u671f\u9593\" 19 type : integer 20 default : 3600 21 steps : 22 - run : 23 name : set-credential 24 # \u4e00\u6642\u8a8d\u8a3c\u30c8\u30fc\u30af\u30f3aws_sts_credentials\u3092\u751f\u6210\u3057\u3066, ECR\u3078\u30ed\u30b0\u30a4\u30f3.image Push 25 command : | 26 aws_sts_credentials=\"$(aws sts assume-role \\ 27 --role-arn ${AWS_ASSUME_ROLE_ARN} \\ 28 --role-session-name \"circleci-session\" \\ 29 --duration-seconds <<parameters.duration_second>> \\ 30 --query \"Credentials\" \\ 31 --output \"json\")\" 32 export AWS_ACCESS_KEY_ID=\"$(echo $aws_sts_credentials | jq -r '.Credentials.AccessKeyId')\" 33 export AWS_SECRET_ACCESS_KEY=\"$(echo $aws_sts_credentials | jq -r '.Credentials.SecretAccessKey')\" 34 export AWS_SESSION_TOKEN=\"$(echo $aws_sts_credentials | jq -r '.Credentials.SessionToken')\" 35 ecr_login : 36 description : \"ECR\u30ed\u30b0\u30a4\u30f3\" 37 steps : 38 - run : 39 name : ecr_login 40 # ECR \u30ed\u30b0\u30a4\u30f3 41 command : | 42 aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com 43 docker_push : 44 description : \"ecr\u30ec\u30b8\u30b9\u30c8\u30ea\u3078push\" 45 steps : 46 - run : 47 name : docker_push 48 # \u4e00\u6642\u8a8d\u8a3c\u30c8\u30fc\u30af\u30f3aws_sts_credentials\u3092\u751f\u6210\u3057\u3066, ECR\u3078\u30ed\u30b0\u30a4\u30f3, Push 49 command : | 50 docker build -t ${AWS_ECR_REGISTORY_NAME} . 51 docker tag ${AWS_ECR_REGISTORY_NAME}:latest ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${AWS_ECR_REGISTORY_NAME}:latest 52 docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${AWS_ECR_REGISTORY_NAME}:latest 53 54 # \u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u5b9f\u884c\u3059\u308b\u30b8\u30e7\u30d6\u306e\u5b9a\u7fa9 55 jobs : 56 build : 57 executor : work_container 58 steps : 59 - checkout 60 - setup_remote_docker : 61 version : 19.03.13 62 #docker_layer_caching: true 63 - run : 64 name : docker build 65 command : | 66 docker build -t ${AWS_ECR_REGISTORY_NAME} . 67 deploy : 68 executor : work_container 69 steps : 70 - checkout 71 - aws-cli/install 72 - setup_remote_docker : 73 version : 19.03.13 74 #docker_layer_caching: true 75 - set_credential 76 - ecr_login 77 - docker_push 78 79 # \u30b8\u30e7\u30d6\u306e\u5b9f\u884c\u9806\u306e\u6307\u5b9a 80 workflows : 81 version : 2 82 build-and-deploy : 83 jobs : 84 - build : 85 filters : 86 branches : 87 ignore : 88 - /feature-.*/ 89 - deploy : 90 requires : 91 - build 92 filters : 93 branches : 94 only : 95 - dev # deploy dev registory 96 - prd # deploy prd registory 97 - /hotfix-.*/ # deploy prd registory CircleCI\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u958b\u304d, All Pipelines > [repository_name] > Environment Variables \u3092\u958b\u304d, \u4ee5\u4e0b\u306e\u3088\u3046\u306b\u74b0\u5883\u5909\u6570\u3092\u5b9a\u7fa9. parameter name value description AWS_ACCESS_KEY_ID [\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u3092\u5165\u529b] IAM\u30e6\u30fc\u30b6\u30fccicd-circleci-001\u3067\u767a\u884c\u3057\u305f\u30a2\u30af\u30bb\u30b9\u30ad\u30fc AWS_DEFAULT_REGION ap-northeast-1 \u5229\u7528\u74b0\u5883\u3092\u5165\u529b AWS_SECRET_ACCESS_KEY [\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u3092\u5165\u529b] IAM\u30e6\u30fc\u30b6\u30fccicd-circleci-001\u3067\u767a\u884c\u3057\u305f\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30a2\u30af\u30bb\u30b9\u30ad\u30fc AWS_ACCOUNT_ID [AWS\u30a2\u30ab\u30a6\u30f3\u30c8ID\u3092\u5165\u529b] AWS\u30a2\u30ab\u30a6\u30f3\u30c8ID\u3092\u5165\u529b AWS_ASSUME_ROLE_ARN arn:aws:iam::[account_id]:role/cicd-role-ecrPushImages-001 \u6a29\u9650\u59d4\u4efb\u3059\u308bIAM\u30ed\u30fc\u30eb\u306eArn AWS_ECR_REGISTORY_NAME webapp-dev-ecr-djangoimage ECR\u30ec\u30b8\u30b9\u30c8\u30ea\u540d\u3092\u8a18\u8f09 AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_DEFAULT_REGION\u306fconfig.yml\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u304cAWSCLI\u7528\u306eOrb\u3092\u5229\u7528\u3059\u308b\u5834\u5408, \u5b9a\u7fa9\u3059\u308b. \u8a73\u3057\u304f\u306f, circleci/aws-cli@2.0.3 ECR\u7528\u306eOrb\u3082\u5b58\u5728\u3059\u308b\u304c, \u4e00\u6642\u8a8d\u8a3c\u7528\u306e\u30c8\u30fc\u30af\u30f3\u3092\u5229\u7528\u3057\u3066ECR\u3078Login\u3059\u308b\u3082\u306e\u3067\u306f\u306a\u3044\u305f\u3081, \u4eca\u56de\u306fconfig\u4e0a\u3067\u8868\u73fe\u3057\u305f","title":"3. CircleCI"},{"location":"cicd/cicd_tldr/","text":"CI/CD \u00b6","title":"TL;DR"},{"location":"cicd/cicd_tldr/#CICD","text":"","title":"CI/CD"},{"location":"infra/aws_tldr/","text":"\u306d\u3053 \u00b6","title":"TL;DR"},{"location":"infra/aws_tldr/#\u306d\u3053","text":"","title":"\u306d\u3053"},{"location":"infra/models/serverless/aws_serverless/","text":"serverless \u00b6","title":"SinglePageApplication"},{"location":"infra/models/serverless/aws_serverless/#serverless","text":"","title":"serverless"},{"location":"infra/models/webapp/aws_webapp_3tiers/","text":"WebApp 3Tiers \u30e2\u30c7\u30eb \u00b6","title":"3Tiers"},{"location":"infra/models/webapp/aws_webapp_3tiers/#WebApp-3Tiers-\u30e2\u30c7\u30eb","text":"","title":"WebApp 3Tiers \u30e2\u30c7\u30eb"}]}