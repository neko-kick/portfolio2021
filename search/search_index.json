{"config":{"indexing":"full","lang":["ja"],"min_search_length":100,"prebuild_index":false,"separator":"[\\s\\-\\.]+"},"docs":[{"location":"","text":"Welcome to MkDocs \u00b6 For full documentation visit mkdocs.org . Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. h2 \u00b6 h3 \u00b6 h4 \u00b6 h5 \u00b6 h6 \u00b6 CodeBlock \u00b6 1 import boto3 2 import jmespath 3 import logging 4 5 import os 6 7 from base64 import b64decode 8 9 logger = logging . getLogger() 10 logger . setLevel(logging . INFO) 11 12 # encrypt environmental variables 13 ENCRYPTED = os . environ[ 'PJ' ] 14 # Decrypt code should run once and variables stored outside of the function 15 # handler so that these are decrypted once per container 16 DECRYPTED = boto3 . client( 'kms' ) . decrypt( 17 CiphertextBlob = b64decode(ENCRYPTED), 18 EncryptionContext = { 19 'LambdaFunctionName' : os . environ[ 'AWS_LAMBDA_FUNCTION_NAME' ]} 20 )[ 'Plaintext' ] . decode( 'utf-8' ) 21 22 23 client = boto3 . client( 'logs' ) 24 25 # variables 26 pj_name = DECRYPTED 27 28 29 # return Class Type ... list 30 def describe_pj_log_group (prefix): 31 response = client . describe_log_groups(logGroupNamePrefix = prefix) 32 log_group_list = jmespath . search( 'logGroups[].logGroupName' , response) 33 return log_group_list 34 35 36 # handler 37 def lambda_handler (event, context): 38 39 log_metrics = \"/ {} \" . format(pj_name) 40 41 log_group_list = describe_pj_log_group(log_metrics) 42 43 # logging 44 logger . info( '##### Describe Log Groups #####' ) 45 logger . info( 'Log list : ' . join(log_group_list)) 46 47 # TODO implement 48 return { 49 'numLogGroups' : len (log_group_list), 50 'listLogGroups' : log_group_list 51 } \u30dc\u30bf\u30f3 Ctrl + Alt + Del \u30c6\u30fc\u30d6\u30eb \u00b6 \u5217 \u5217 \u5185\u5bb91 \u5185\u5bb91 \u5185\u5bb92 \u5185\u5bb92 \u30c0\u30a4\u30a2\u30b0\u30e9\u30e0 \u00b6 graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!]; graph TD; A-->B; B-->A; Note \u6ce8\u91c8\u3092\u3053\u3053\u306b\u8a18\u8f09\u3002 \u6ce8\u91c82 \u30cd\u30b9\u30c8\u3059\u308b\u969b\u306f\u3082\u3046\u4e00\u56de Tip \u30d2\u30f3\u30c8\u3067\u3059\u3002 Warning \u3053\u308c\u306f\u8b66\u544a\u3067\u3059 Danger \u3053\u308c\u306f\u5371\u967a\u3067\u3059\u3002 Success \u3053\u308c\u306f\u6210\u529f\u3067\u3059\u3002 Failure \u3053\u308c\u306f\u5931\u6557\u3067\u3059\u3002 1 FATAL Bug \u3053\u308c\u306f\u30d0\u30b0\u3067\u3059\u3002 Summary \u3053\u308c\u306f\u6982\u8981\u3067\u3059\u3002 ??? note(\u6298\u308a\u8fd4\u3057) \u6298\u308a\u8fd4\u3057 \u30d1\u30e9\u30e1\u30fc\u30bf\u89e3\u8aac\u3068\u304b \u00b6 \u4e0b\u8a18\u3092 mkdocs.yml \u306b\u8ffd\u52a0 1 markdown_extensions : 2 - def_list \u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b.\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u304b\u3092\u8a2d\u5b9a Lorem ipsum dolor sit amet Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Cras arcu libero Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor.","title":"\u306f\u3058\u3081\u306b"},{"location":"#Welcome-to-MkDocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#Commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#h2","text":"","title":"h2"},{"location":"#h3","text":"","title":"h3"},{"location":"#h4","text":"","title":"h4"},{"location":"#h5","text":"","title":"h5"},{"location":"#h6","text":"","title":"h6"},{"location":"#CodeBlock","text":"1 import boto3 2 import jmespath 3 import logging 4 5 import os 6 7 from base64 import b64decode 8 9 logger = logging . getLogger() 10 logger . setLevel(logging . INFO) 11 12 # encrypt environmental variables 13 ENCRYPTED = os . environ[ 'PJ' ] 14 # Decrypt code should run once and variables stored outside of the function 15 # handler so that these are decrypted once per container 16 DECRYPTED = boto3 . client( 'kms' ) . decrypt( 17 CiphertextBlob = b64decode(ENCRYPTED), 18 EncryptionContext = { 19 'LambdaFunctionName' : os . environ[ 'AWS_LAMBDA_FUNCTION_NAME' ]} 20 )[ 'Plaintext' ] . decode( 'utf-8' ) 21 22 23 client = boto3 . client( 'logs' ) 24 25 # variables 26 pj_name = DECRYPTED 27 28 29 # return Class Type ... list 30 def describe_pj_log_group (prefix): 31 response = client . describe_log_groups(logGroupNamePrefix = prefix) 32 log_group_list = jmespath . search( 'logGroups[].logGroupName' , response) 33 return log_group_list 34 35 36 # handler 37 def lambda_handler (event, context): 38 39 log_metrics = \"/ {} \" . format(pj_name) 40 41 log_group_list = describe_pj_log_group(log_metrics) 42 43 # logging 44 logger . info( '##### Describe Log Groups #####' ) 45 logger . info( 'Log list : ' . join(log_group_list)) 46 47 # TODO implement 48 return { 49 'numLogGroups' : len (log_group_list), 50 'listLogGroups' : log_group_list 51 } \u30dc\u30bf\u30f3 Ctrl + Alt + Del","title":"CodeBlock"},{"location":"#\u30c6\u30fc\u30d6\u30eb","text":"\u5217 \u5217 \u5185\u5bb91 \u5185\u5bb91 \u5185\u5bb92 \u5185\u5bb92","title":"\u30c6\u30fc\u30d6\u30eb"},{"location":"#\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0","text":"graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!]; graph TD; A-->B; B-->A; Note \u6ce8\u91c8\u3092\u3053\u3053\u306b\u8a18\u8f09\u3002 \u6ce8\u91c82 \u30cd\u30b9\u30c8\u3059\u308b\u969b\u306f\u3082\u3046\u4e00\u56de Tip \u30d2\u30f3\u30c8\u3067\u3059\u3002 Warning \u3053\u308c\u306f\u8b66\u544a\u3067\u3059 Danger \u3053\u308c\u306f\u5371\u967a\u3067\u3059\u3002 Success \u3053\u308c\u306f\u6210\u529f\u3067\u3059\u3002 Failure \u3053\u308c\u306f\u5931\u6557\u3067\u3059\u3002 1 FATAL Bug \u3053\u308c\u306f\u30d0\u30b0\u3067\u3059\u3002 Summary \u3053\u308c\u306f\u6982\u8981\u3067\u3059\u3002 ??? note(\u6298\u308a\u8fd4\u3057) \u6298\u308a\u8fd4\u3057","title":"\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0"},{"location":"#\u30d1\u30e9\u30e1\u30fc\u30bf\u89e3\u8aac\u3068\u304b","text":"\u4e0b\u8a18\u3092 mkdocs.yml \u306b\u8ffd\u52a0 1 markdown_extensions : 2 - def_list \u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b.\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u304b\u3092\u8a2d\u5b9a Lorem ipsum dolor sit amet Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Cras arcu libero Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor.","title":"\u30d1\u30e9\u30e1\u30fc\u30bf\u89e3\u8aac\u3068\u304b"},{"location":"about/","text":"About \u00b6 \u3053\u306e\u30b5\u30a4\u30c8\u306b\u3064\u3044\u3066 \u00b6","title":"About"},{"location":"about/#About","text":"","title":"About"},{"location":"about/#\u3053\u306e\u30b5\u30a4\u30c8\u306b\u3064\u3044\u3066","text":"","title":"\u3053\u306e\u30b5\u30a4\u30c8\u306b\u3064\u3044\u3066"},{"location":"aws/","text":"AWS\u306b\u3064\u3044\u3066 \u00b6 \u30e2\u30c7\u30eb \u00b6 \u8cc7\u683c \u00b6","title":"Home"},{"location":"aws/#AWS\u306b\u3064\u3044\u3066","text":"","title":"AWS\u306b\u3064\u3044\u3066"},{"location":"aws/#\u30e2\u30c7\u30eb","text":"","title":"\u30e2\u30c7\u30eb"},{"location":"aws/#\u8cc7\u683c","text":"","title":"\u8cc7\u683c"},{"location":"aws/aws_tldr/","text":"\u306d\u3053 \u00b6","title":"TL;DR"},{"location":"aws/aws_tldr/#\u306d\u3053","text":"","title":"\u306d\u3053"},{"location":"aws/certification/aws_certifications/","text":"Certification \u00b6 SAP \u00b6 SCS \u00b6","title":"AWS_SAP"},{"location":"aws/certification/aws_certifications/#Certification","text":"","title":"Certification"},{"location":"aws/certification/aws_certifications/#SAP","text":"","title":"SAP"},{"location":"aws/certification/aws_certifications/#SCS","text":"","title":"SCS"},{"location":"aws/models/serverless/aws_serverless/","text":"serverless \u00b6","title":"SinglePageApplication"},{"location":"aws/models/serverless/aws_serverless/#serverless","text":"","title":"serverless"},{"location":"aws/models/webapp/aws_webapp_3tiers/","text":"WebApp 3Tiers \u30e2\u30c7\u30eb \u00b6","title":"3Tiers"},{"location":"aws/models/webapp/aws_webapp_3tiers/#WebApp-3Tiers-\u30e2\u30c7\u30eb","text":"","title":"WebApp 3Tiers \u30e2\u30c7\u30eb"}]}